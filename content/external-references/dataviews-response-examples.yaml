# data responses
data-get-multiple-formats:
  type: markdown
  value: |
    ```json
    form=default
    HTTP 200 OK
    Content-Type: application/json
    [
        {
            "Time": "2018-01-01T00:00:00Z",
            "Temperature": 24,
            "Flowrate": 44,
            "Volume": 245
        },
        {
            "Time": "2018-01-01T00:00:01Z",
            "Temperature": 24,
            "Flowrate": 44,
            "Volume": 245
        },
        {
            "Time": "2018-01-01T00:00:02Z",
            "Temperature": 24,
            "Flowrate": 44,
            "Volume": 245
        }
    ]
    ```

    ```csv
    form=csv
    HTTP 200 OK
    Content-Type: text/csv
    2018-01-01T00:00:00Z,24,44,245
    2018-01-01T00:00:01Z,24,44,245
    2018-01-01T00:00:02Z,24,44,245
    ```

    ```csv
    form=csvh
    HTTP 200 OK
    Content-Type: text/csv
    Time,Temperature,Flowrate,Volume
    2018-01-01T00:00:00Z,24,44,245
    2018-01-01T00:00:01Z,24,44,245
    2018-01-01T00:00:02Z,24,44,245
    ```

    ```json
    form=table
    HTTP 200 OK
    Content-Type: application/json
    {
       "Columns": [
          {
              "Name": "Time",
              "Type": "DateTime"
          },
          {
              "Name": "Temperature",
              "Type": "Int32"
          },
          {
              "Name": "Flowrate",
              "Type": "Int32"
          },
          {
              "Name": "Volume",
              "Type": "Int32"
          }
      ],
      "Rows": [
        [
          "2018-01-01T00:00:00Z",
          24,
          44,
          245
        ],
        [
          "2018-01-01T00:00:01Z",
          24,
          44,
          245
        ],
        [
          "2018-01-01T00:00:02Z",
          24,
          44,
          245
        ]
      ]
    }
    ```

    ```json
    form=tableh
    HTTP 200 OK
    Content-Type: application/json
    {
      "Columns": [
          {
              "Name": "Time",
              "Type": "DateTime"
          },
          {
              "Name": "Temperature",
              "Type": "Int32"
          },
          {
              "Name": "Flowrate",
              "Type": "Int32"
          },
          {
              "Name": "Volume",
              "Type": "Int32"
          }
      ],
      "Rows": [
          [
              "Time",
              "Temperature",
              "Flowrate",
              "Volume"
          ],
          [
              "2018-01-01T00:00:00Z",
              24,
              44,
              245
          ],
          [
              "2018-01-01T00:00:01Z",
              24,
              44,
              245
          ],
          [
              "2018-01-01T00:00:02Z",
              24,
              44,
              245
          ]
       ]
    }
    ```

# dataview responses
dataview-create:
  type: markdown
  value: |
    ```json
    HTTP 201 Created
    Content-Type: application/json  
    {
      "Id": "c79630cc-21dc-483e-8b37-46880e92c456",
      "Name": "demo",
      "Description": "demonstration",
      "IndexField": { "Label": "Timestamp" },
      "Queries": [],
      "DataFieldSets": [],
      "GroupingFields": [],
      "IndexTypeCode": "DateTime",
      "Shape": "Standard"
    }
    ```
dataview-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    Content-Type: application/json  
    {
      "Id": "demo",
      "Name": "demo",
      "IndexField": { "Label": "Timestamp" },
      "Queries": [
        { 
          "Id": "weather",
          "Kind": "Stream",
          "Value":"*weather*" 
        }
      ],
      "DataFieldSets": [],
      "GroupingFields": [],
      "IndexTypeCode": "DateTime",
      "Shape": "Standard"
    }
    ```
dataview-getorcreate:
  type: markdown
  value: |
    ```json
    HTTP 201 Created
    Content-Type: application/json  
    {
      "Id": "demo2",
      "Name": "demo2",
      "Description": "demonstration 2",
      "IndexField": { "Label": "Timestamp" },
      "Queries": [],
      "DataFieldSets": [],
      "GroupingFields": [],
      "IndexTypeCode": "DateTime",
      "Shape": "Standard"
    }
    ```
dataviews-get:
  type: markdown
  value: |
    ```json
    HTTP 201 Created
    Content-Type: application/json  
    {
      [
        {
          "Id": "demo view 1",
          ... etc.
        },
        {
          "Id": "demo view 2",
          ... etc.
        }
      ]
    }
    ```
# resolved resources responses
availablefieldsets-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    {
        "TimeOfResolution": "2019-12-13T01:23:45Z",
        "Items": [
            {
                "QueryId": "weather",
                "DataFields": [
                    {
                        "Source": "Id",
                        "Keys": [],
                        "Label": "{IdentifyingValue} Id"
                    },
                    {
                        "Source": "PropertyId",
                        "Keys": [
                            "SolarRadiation"
                        ],
                        "Label": "{IdentifyingValue} SolarRadiation {Uom} {SummaryType}"
                    },
                    {
                        "Source": "Metadata",
                        "Keys": [
                            "Site"
                        ],
                        "Label": "{IdentifyingValue} Site {Uom}"
                    },
                    {
                        "Source": "Tags",
                        "Keys": [
                            "Weather",
                            "Low Resolution",
                            "High Resolution",
                            "Gen1",
                            "Gen2",
                        ],
                        "Label": "{IdentifyingValue} Tags"
                    }
                ]
            }
        ]
    }
    ```
dataitems-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    Content-Type: application/json  
    {
      "TimeOfResolution": "2019-12-13T01:23:45Z",
      "Items": [
        {
          "Id": "WS_BILT",
          "Name": "WS_BILT",
          "TypeId": "quickstart-omf-weather-gen1",
          "ResourceType": "Stream",
          "Tags": [
            "Weather",
            "High Resolution",
            "Gen1"
           ],
           "Metadata": [
             {
               "Name": "Site",
               "Value": "Biltmore",
               "TypeCode": "String"
             }
           ],
           "DataItemFields": [
             {
               "Id": "Timestamp",
               "Name": "Timestamp",
               "TypeCode": "DateTime",
               "IsKey": true
             },
             {
               "Id": "SolarRadiation",
               "Name": "SolarRadiation",
               "TypeCode": "Int32",
               "IsKey": false
             },
             {
               "Id": "Temperature",
               "Name": "Temperature",
               "TypeCode": "Double",
               "IsKey": false
             }
          ],
          "IneligibleDataItemFields": []
        }
      ]
    }
    ```
fieldmappings-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    {
        "TimeOfResolution": "2019-12-13T01:23:45Z",
        "Items": [
          {
            "Id": "Timestamp",
            "Label": "Timestamp",
            "FieldKind": "IndexField",
            "TypeCode": "DateTime",
            "DataMappings": [
              {
                "TypeCode": "DateTime"
              },
              {
                "TypeCode": "DateTime"
              },
              {
                "TypeCode": "DateTime"
              }
            ]
          },
          {
            "Id": "Temperature",
            "Label": "Temperature",
            "FieldKind": "DataField",
            "TypeCode": "Double",
            "DataMappings": [
              {
                "TargetId": "WS_BILT",
                "TargetFieldKey": "Temperature",
                "TypeCode": "Double",
                "FieldSetIndex": 1,
                "FieldIndex": 0
              },
              {
                "TargetId": "WS_ROSE",
                "TargetFieldKey": "Temperature",
                "TypeCode": "Double",
                "FieldSetIndex": 1,
                "FieldIndex": 0
              },
              {
                "TargetId": "WS_WINT",
                "TargetFieldKey": "AmbientTemperature",
                "TypeCode": "Double",
                "FieldSetIndex": 1,
                "FieldIndex": 0
              }
            ]
          },
        ]
    }
    ```
statistics-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    {
        "TimeOfResolution": "2019-12-13T01:23:45Z",
        "DataItemCount": 24,
        "GroupCount": 2,
        "FieldMappingCount": 10,
        "DataFieldSets": [
            {
                "DataItemCount": 18,
                "UnmappedDataItemCount": 3,
                "DataFields": [
                    {
                        "FieldMappingCount": 3,
                        "DataMappingCount": 6,
                        "EmptyDataMappingCount": 0,
                        "UnmappedGroupCount": 0
                    },
                    {
                        "FieldMappingCount": 3,
                        "DataMappingCount": 6,
                        "EmptyDataMappingCount": 2,
                        "UnmappedGroupCount": 1
                    }
                ]
            },
            {
                "DataItemCount": 6,
                "UnmappedDataItemCount": 0,
                "DataFields": [
                    {
                        "FieldMappingCount": 2,
                        "DataMappingCount": 4,
                        "EmptyDataMappingCount": 2,
                        "UnmappedGroupCount": 1
                    }
                ]
            }
        ]
    }
    ```
groups-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    Content-Type: application/json
    {
      "TimeOfResolution": "2019-12-13T01:23:45Z",
      "Items": [
        {
          "GroupingValues": [ 
            {
              "Value": "Biltmore",
              "TypeCode": "String"
            }
          ],
          "DataItems": {
            "Query1": [
              {
                "Id": "WS_BILT",
                "Name": "WS_BILT",
                "TypeId": "quickstart-omf-weather-gen1",
                "ResourceType": "Stream",
                "Tags": [
                    "Weather",
                    "High Resolution",
                    "Gen1"
                ],
                "Metadata": [
                  {
                    "Name": "Site",
                    "Value": "Biltmore",
                    "TypeCode": "String"
                  }
                ],
                "DataItemFields": [
                    {
                        "Id": "Timestamp",
                        "Name": "Timestamp",
                        "TypeCode": "DateTime",
                        "IsKey": true
                    },
                    {
                        "Id": "SolarRadiation",
                        "Name": "SolarRadiation",
                        "TypeCode": "Int32",
                        "IsKey": false
                    },
                    {
                        "Id": "Temperature",
                        "Name": "Temperature",
                        "TypeCode": "Double",
                        "IsKey": false
                    }
                ],
                "IneligibleDataItemFields": []
              }
            ]
          }
        }
      ]
    }
    ```
ineligibledataitems-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    Content-Type: application/json
    {
      "TimeOfResolution": "2019-12-13T01:23:45Z",
      "Items": [
        {
          "Id": "SOME_INELIGIBLE_STREAM",
          "Name": "Some Ineligible Stream",
          "TypeId": "type-with-different-index",
          "ResourceType": "Stream",
          "Tags": [],
          "Metadata": [],
          "DataItemFields": [],
          "IneligibleDataItemFields": [
             {
               "Id": "Depth",
               "Name": "Depth",
               "TypeCode": "Double",
               "IsKey": true
             },
             {
               "Id": "Density",
               "Name": "Density",
               "TypeCode": "Double",
               "IsKey": false
             }
          ]
        }
      ]
    }
    ```
    # access control responses
dataview-accessrights-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    [
      "Read",
      "Write",
      "Delete",
      "ManageAccessControl"
    ]
    ```
dataview-acl-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    {
      "RoleTrusteeAccessControlEntries": 
      [
        {
          "Trustee": {
            "Type": Role,
            "RoleId": "11111111-1111-1111-1111-111111111111"
          },
          "AccessType": Allowed,
          "AccessRights": 1
        },
        {
          "Trustee": {
            "Type": Role,
            "RoleId": "22222222-2222-2222-2222-222222222222"
          },
          "AccessType": Allowed,
          "AccessRights": 15
        },
        {
          "Trustee": {
            "Type": User,
            "RoleId": "33333333-3333-3333-3333-333333333333"
          },
          "AccessType": Denied,
          "AccessRights": 8
        }
      ]
    }
    ```
dataview-owner-get:
  type: markdown
  value: |
    ```json
    {
        "Type": User,
        "TenantId": "55555555-5555-5555-5555-555555555555",
        "ObjectId": "44444444-4444-4444-4444-444444444444"
    }
    ```
dataviews-acl-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    {
      "RoleTrusteeAccessControlEntries": 
      [
        {
          "Trustee": {
            "Type": Role,
            "RoleId": "11111111-1111-1111-1111-111111111111"
          },
          "AccessType": Allowed,
          "AccessRights": 1
        },
        {
          "Trustee": {
            "Type": Role,
            "RoleId": "22222222-2222-2222-2222-222222222222"
          },
          "AccessType": Allowed,
          "AccessRights": 15
        },
        {
          "Trustee": {
            "Type": User,
            "RoleId": "33333333-3333-3333-3333-333333333333"
          },
          "AccessType": Denied,
          "AccessRights": 8
        }
      ]
    }
    ```
dataviews-accessrights-get:
  type: markdown
  value: |
    ```json
    HTTP 200 OK
    [
      "Read",
      "Write",
      "Delete",
      "ManageAccessControl"
    ]
    ```
