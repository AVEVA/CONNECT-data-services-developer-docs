<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Introduction to Data Views </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Introduction to Data Views ">
    <meta name="generator" content="docfx 2.39.2.0">
    
    <link rel="shortcut icon" href="../../favicon.ico">
    <link rel="stylesheet" href="../../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../../styles/docfx.css">
    <link rel="stylesheet" href="../../styles/main.css">
    <meta property="docfx:navrel" content="../../toc.html">
    <meta property="docfx:tocrel" content="../toc.html">
    
    <meta property="docfx:rel" content="../../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              <a class="navbar-brand" href="../../index.html" width="46">
                <img id="logo" src="../../Documentation/images/atlas_icon.png" height="46" width="46" alt="OSIsoft Cloud Serices"> 
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list"></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Introduction">
<h1 id="introduction-to-data-views" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="5" sourceendlinenumber="5">Introduction to Data Views</h1>

<h3 id="data-views-quick-start-guide" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="7" sourceendlinenumber="7">Data views quick start guide</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="9" sourceendlinenumber="9">This page will give an overview of the data view definition and how to create data views. The intention is to get users started with the basic ways to use data views. For more in depth information about individual components, see their respective pages.</p>
<h3 id="data-sources" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="11" sourceendlinenumber="11">Data sources</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="13" sourceendlinenumber="13">To illustrate the examples below, the following SdsStreams have been created and populated with test data: Arizona_Stream, California_Stream, and Pennsylvania_Stream. All streams have the same properties: FlowRate, Volume, and Temperature. For information on how to create such streams, see the <a class="xref" href="../SequentialDataStore/Data_Store_and_SDS.html" data-raw-source="[Sequential Data Store](xref:sds)" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="13" sourceendlinenumber="13">Sequential Data Store</a> documentation. </p>
<h3 id="simple-example" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="15" sourceendlinenumber="15">Simple example</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="17" sourceendlinenumber="17">The following is an example of creating a data view definition with a query to retrieve data from streams whose id contain &quot;_Stream&quot;, like the streams defined above. Queries can also use logical operators to create complex expressions. See the <a class="xref" href="Queries.html" data-raw-source="[queries](xref:Queries)" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="17" sourceendlinenumber="17">queries</a> page for more information. </p>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="19" sourceendlinenumber="19">This is the simplest form of creating a data view and uses default settings for all components. The result would include columns mapped to every property in every stream of the query.</p>
<pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="21" sourceendlinenumber="37"><code class="lang-json">{
  &quot;Id&quot;: &quot;SimpleDataView&quot;,
  &quot;Queries&quot;: [
    {
      &quot;Id&quot;: &quot;Query1&quot;,
      &quot;Query&quot;: {
        &quot;Resource&quot;: &quot;Streams&quot;,
        &quot;Field&quot;: &quot;Id&quot; ,
        &quot;Value&quot;: &quot;_Stream&quot; ,
        &quot;Operator&quot;: &quot;Contains&quot;
      }
    }
  ],
  &quot;IndexDataType&quot;: &quot;datetime&quot;
}
</code></pre><p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="39" sourceendlinenumber="39">Since such data might not be very friendly to work with, there are ways to shape the resulting data set by defining the output columns, grouping the data items, and configuring the index. The following sections provide overviews of these tasks. See their respective pages for more information.</p>
<h3 id="defining-the-columns" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="41" sourceendlinenumber="41">Defining the columns</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="43" sourceendlinenumber="43">To define the columns of the output, the Mappings object can be added. The simplest way that users can do this is by using the default mappings. See the first example below. This will create default columns mapped to all the properties of the query, which would result in a wide table. </p>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="45" sourceendlinenumber="45">To explicitly define the columns and their mapping to a data source, users would create these in the Mappings object. The second example  object creates a Timestamp column to use as key, along with three columns to map certain properties of a stream. This is done using the mapping rule object of the column to define the data source by specifying the property path and an item identifier to identify its containing stream:</p>
<pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="46" sourceendlinenumber="50"><code class="lang-json">    &quot;Mappings&quot;: {
        &quot;IsDefault&quot;: true
    },
</code></pre><pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="51" sourceendlinenumber="111"><code class="lang-json">    &quot;Mappings&quot;: {
        &quot;Columns&quot;: [
            {
                &quot;Name&quot;: &quot;Timestamp&quot;,
                &quot;MappingRule&quot;: {
                    &quot;PropertyPaths&quot;: [
                        &quot;Time&quot;
                    ]
                },
                &quot;IsKey&quot;: true,
                &quot;DataType&quot;: &quot;string&quot;
            },
            {
                &quot;Name&quot;: &quot;Arizona flow rate&quot;,
                &quot;MappingRule&quot;: {
                    &quot;PropertyPaths&quot;: [
                        &quot;FlowRate&quot;
                    ],
                    &quot;ItemIdentifier&quot;: {
                        &quot;Resource&quot;: &quot;Streams&quot;,
                        &quot;Field&quot;: &quot;Id&quot;,
                        &quot;Name&quot;: null,
                        &quot;Value&quot;: &quot;Arizona_Stream&quot;,
                        &quot;Operator&quot;: &quot;Equals&quot;
                    }
                }
            },
            {
                &quot;Name&quot;: &quot;Pennsylvania volume&quot;,
                &quot;MappingRule&quot;: {
                    &quot;PropertyPaths&quot;: [
                        &quot;Volume&quot;
                    ],
                    &quot;ItemIdentifier&quot;: {
                        &quot;Resource&quot;: &quot;Streams&quot;,
                        &quot;Field&quot;: &quot;Id&quot;,
                        &quot;Name&quot;: null,
                        &quot;Value&quot;: &quot;Pennsylvania_Stream&quot;,
                        &quot;Operator&quot;: &quot;Equals&quot;
                    }
                }
            },
                        {
                &quot;Name&quot;: &quot;California temperature&quot;,
                &quot;MappingRule&quot;: {
                    &quot;PropertyPaths&quot;: [
                        &quot;Temperature&quot;
                    ],
                    &quot;ItemIdentifier&quot;: {
                        &quot;Resource&quot;: &quot;Streams&quot;,
                        &quot;Field&quot;: &quot;Id&quot;,
                        &quot;Name&quot;: null,
                        &quot;Value&quot;: &quot;California_Stream&quot;,
                        &quot;Operator&quot;: &quot;Equals&quot;
                    }
                }
            }
        ]
    },
</code></pre><p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="112" sourceendlinenumber="112">This mapping will create columns for the properties specified as property paths of the different streams, and display their values along with the timestamp key column, resulting in an output like the following:</p>
<pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="114" sourceendlinenumber="123"><code class="lang-json">...
    {
        &quot;Timestamp&quot;: &quot;2019-03-16T17:24:30.5270905Z&quot;,
        &quot;Arizona flow rate&quot;: 23,
        &quot;Pennsylvania volume&quot;: 120,
        &quot;California temperature&quot;: 9
    },
...
</code></pre><p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="125" sourceendlinenumber="125">To more efficiently combine components, the mapping rule can also be linked to shared mapping rules and group rules. See the <a class="xref" href="Mappings.html" data-raw-source="[mappings](xref:Mappings)" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="125" sourceendlinenumber="125">mappings</a> page for more information.</p>
<h3 id="adding-grouping" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="128" sourceendlinenumber="128">Adding grouping</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="130" sourceendlinenumber="130">Using the default configurations, the result would be returned with no grouping, which for the streams used above would look something like the following:</p>
<pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="132" sourceendlinenumber="145"><code class="lang-json">    {
        &quot;Time&quot;: &quot;2018-10-03T03:00:00Z&quot;,
        &quot;Az_Stream_Temperature&quot;: 5,
        &quot;Az_Stream_FlowRate&quot;: 2,
        &quot;Az_Stream_Volume&quot;: 100,
        &quot;Cali_Stream_Temperature&quot;: 24,
        &quot;Cali_Stream_FlowRate&quot;: 44,
        &quot;Cali_Stream_Volume&quot;: 245,
        &quot;Philly_Stream_Temperature&quot;: 24,
        &quot;Philly_Stream_FlowRate&quot;: 44,
        &quot;Philly_Stream_Volume&quot;: 245
    },
</code></pre><p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="147" sourceendlinenumber="147">To illustrate the effect of grouping, applying the following group rule to the data view would yield the results shown below:</p>
<pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="148" sourceendlinenumber="155"><code class="lang-json">    &quot;GroupRules&quot;: [
        {
            &quot;Id&quot;: &quot;SimpleGroupRule&quot;,
            &quot;Type&quot;: &quot;StreamId&quot;
        }
    ],
</code></pre><pre sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="156" sourceendlinenumber="184"><code class="lang-json">    {
        &quot;Time&quot;: &quot;2018-10-03T03:00:00Z&quot;,
        &quot;SimpleGroupRule&quot;: &quot;Arizona_Stream&quot;,
        &quot;Temperature&quot;: 5,
        &quot;FlowRate&quot;: 2,
        &quot;Volume&quot;: 100,
        &quot;Value&quot;: &quot;&quot;
    },
    ...
    {
        &quot;Time&quot;: &quot;2018-10-03T03:00:00Z&quot;,
        &quot;SimpleGroupRule&quot;: &quot;California_Stream&quot;,
        &quot;Temperature&quot;: 24,
        &quot;FlowRate&quot;: 44,
        &quot;Volume&quot;: 245,
        &quot;Value&quot;: &quot;&quot;
    },
    ...
    {
        &quot;Time&quot;: &quot;2018-10-03T03:00:00Z&quot;,
        &quot;SimpleGroupRule&quot;: &quot;Pennsylvania_Stream&quot;,
        &quot;Temperature&quot;: 24,
        &quot;FlowRate&quot;: 44,
        &quot;Volume&quot;: 245,
        &quot;Value&quot;: &quot;&quot;
    },
    ...
</code></pre><p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="186" sourceendlinenumber="186">As shown, the Group Rule object can organize data items into data groups within the view to generate more meaningful results and let users compare similar properties in the resulting data set. </p>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="188" sourceendlinenumber="188">Group rules can be more advanced and apply to metadata and tags of Sds streams. For more information see the <a class="xref" href="GroupRules.html" data-raw-source="[group rules](xref:GroupRules)" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="188" sourceendlinenumber="188">group rules</a> page.</p>
<h3 id="configuring-the-index" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="190" sourceendlinenumber="190">Configuring the index</h3>
<p sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="192" sourceendlinenumber="192">Users can define the index config for data views by setting the Start and End times, a time interval, and the mode, all to be used when retrieving the data. See the <a class="xref" href="IndexConfig.html" data-raw-source="[index config](xref:IndexConfig)" sourcefile="Documentation/DataViews/Introduction.md" sourcestartlinenumber="192" sourceendlinenumber="192">index config</a> page for information.</p>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                  <li>
                    <a href="https://github.com/osisoft/OCS-Docs/blob/master/Documentation/DataViews/Introduction.md/#L1" class="contribution-link">Improve this Doc</a>
                  </li>
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              <!-- <p><a class="back-to-top" href="#top">Back to top</a><p> -->
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
            <span id='copyright-text'>© 2019 - OSIsoft, LLC.<span>
        </span></span></div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../../styles/docfx.js"></script>
    <script type="text/javascript" src="../../styles/main.js"></script>
  </body>
</html>
